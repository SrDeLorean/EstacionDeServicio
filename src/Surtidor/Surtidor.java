package Surtidor;

import EstacionDeServicio.Precios;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author SrDeLorean
 */
public class Surtidor extends javax.swing.JFrame implements Observer{

    /**
     * Creates new form Surtidor
     */
    private int id;
    private Precios precios;
    private int countlitrosConsumidos=0;
    private int countcargasRealizadas=0;
    private int carga=0;
    private int puerto;
    
    public Surtidor(int id, Precios precios, int puerto) {
        this.id=id;
        this.precios=precios;
        this.puerto=puerto;
        initComponents();
        ObservadorEstacionDeServicio c = new ObservadorEstacionDeServicio(puerto);
        c.addObserver(this);
        Thread t = new Thread(c);
        t.start();
        
        cantidadDeCarga.setText("");
        jComboBox1.setSelectedIndex(0);
        totalAPagar.setText("0");
        //valorPorLitro.setText("por ver");
         this.valorPorLitro.setText(Double.toString(precios.getB93()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GenerarBoleta = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        cantidadDeCarga = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        valorPorLitro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        totalAPagar = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        GenerarBoleta.setText("Generar Boleta");
        GenerarBoleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarBoletaActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar ");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        cantidadDeCarga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cantidadDeCargaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cantidadDeCargaFocusLost(evt);
            }
        });
        cantidadDeCarga.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                cantidadDeCargaInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        cantidadDeCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadDeCargaActionPerformed(evt);
            }
        });
        cantidadDeCarga.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cantidadDeCargaPropertyChange(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cantidad a cargar (L)");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tipo de conbustible");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Surtidor");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "93", "95", "97", "Disel", "Kerosene" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Valor por litro");

        valorPorLitro.setEditable(false);
        valorPorLitro.setBackground(new java.awt.Color(255, 255, 255));
        valorPorLitro.setEnabled(false);
        valorPorLitro.setFocusable(false);
        valorPorLitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorPorLitroActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Total a pagar");

        totalAPagar.setEditable(false);
        totalAPagar.setBackground(new java.awt.Color(255, 255, 255));
        totalAPagar.setEnabled(false);
        totalAPagar.setFocusable(false);
        totalAPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalAPagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GenerarBoleta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(totalAPagar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cantidadDeCarga))))
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(valorPorLitro, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorPorLitro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cantidadDeCarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(totalAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenerarBoleta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cantidadDeCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadDeCargaActionPerformed
        // TODO add your handling code here:
        if (!this.cantidadDeCarga.equals(this.carga)){
            Double cantidad = Double.parseDouble(this.valorPorLitro.getText())*Double.parseDouble(this.cantidadDeCarga.getText());
            this.totalAPagar.setText(cantidad.toString());
       
        }
        
    }//GEN-LAST:event_cantidadDeCargaActionPerformed

    private void GenerarBoletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarBoletaActionPerformed
        if (!this.cantidadDeCarga.getText().isEmpty() ) {
            if (isNumeric(this.cantidadDeCarga.getText())) {
                String ip = "localhost";
                int port = 10012;

                try (Socket ss = new Socket(ip, port)) {
                    DataOutputStream out = new DataOutputStream(ss.getOutputStream());
                    out.writeInt(id);
                    out.writeUTF(this.jComboBox1.getItemAt(this.jComboBox1.getSelectedIndex()));
                    out.writeDouble(Double.parseDouble(this.cantidadDeCarga.getText()));
                    //System.out.println("sdaljkf "+this.totalAPagar.getText());
                    //Double a = Double.parseDouble(this.cantidadDeCarga.getText());
                    Double a = Double.parseDouble(this.totalAPagar.getText());
                    
                    
                    int value = (int)Math.round(a);
                    out.writeInt(value);
                    
                } catch (IOException ex) {
                    Logger.getLogger(Surtidor.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "La boleta fue generada satisfactoriamente", "Boleta", JOptionPane.INFORMATION_MESSAGE);
                cantidadDeCarga.setText("");
                jComboBox1.setSelectedIndex(0);
                totalAPagar.setText("0");
                this.valorPorLitro.setText(Double.toString(precios.getB93()));
            }
            else{
                JOptionPane.showMessageDialog(null, "La cantidad de carga debe ser numerica", "Error cantidad de carga", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No puedes generar una boleta vacia", "Boleta vacia", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_GenerarBoletaActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String tipo = this.jComboBox1.getItemAt(this.jComboBox1.getSelectedIndex());
        
        System.out.println("tipo "+tipo);
        switch (tipo){
            case "93":
                this.valorPorLitro.setText(Double.toString(precios.getB93()));
                break;
            case "95":
                this.valorPorLitro.setText(Double.toString(precios.getB95()));
                break;
            case "97":
                this.valorPorLitro.setText(Double.toString(precios.getB97()));
                break;
            case "Disel":
                this.valorPorLitro.setText(Double.toString(precios.getDisel()));
                break;
            case "Kerosene":
                this.valorPorLitro.setText(Double.toString(precios.getKerosene()));
                break;
            default:
                System.out.println("a la verga con el precio locoooooooooooooooooooooo");
                break;
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        // TODO add your handling code here:
        int opcion = JOptionPane.showConfirmDialog(null, "Realmente desea cancelar la venta?", "Cancelar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (opcion == 0){
            cantidadDeCarga.setText("");
            jComboBox1.setSelectedIndex(0);
            totalAPagar.setText("0");
            this.valorPorLitro.setText(Double.toString(precios.getB93()));
        }
    }//GEN-LAST:event_cancelarActionPerformed

    private void valorPorLitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorPorLitroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorPorLitroActionPerformed

    private void totalAPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalAPagarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalAPagarActionPerformed

    private void cantidadDeCargaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cantidadDeCargaPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadDeCargaPropertyChange

    private void cantidadDeCargaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cantidadDeCargaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadDeCargaFocusLost

    private void cantidadDeCargaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cantidadDeCargaFocusGained
        // TODO add your handling code her
        
    }//GEN-LAST:event_cantidadDeCargaFocusGained

    private void cantidadDeCargaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cantidadDeCargaInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadDeCargaInputMethodTextChanged

    private boolean isNumeric(String cadena){
	try {
		Integer.parseInt(cadena);
		return true;
	} catch (NumberFormatException nfe){
		return false;
	}
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Surtidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Surtidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Surtidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Surtidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Surtidor(0, null, 9999).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GenerarBoleta;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField cantidadDeCarga;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField totalAPagar;
    private javax.swing.JTextField valorPorLitro;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        Precios p = (Precios) arg;
        this.precios=p;
    }

    public int getPuerto() {
        return puerto;
    }
    
}
